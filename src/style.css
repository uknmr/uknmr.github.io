/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind base;

html {
  font-size: calc((100vw - 320px)/200 + 1rem)
}

a {
  @apply text-blue-dark underline;
}

.text-xs a {
  @apply text-blue-darker;
}

code {
  @apply font-mono leading-normal whitespace-pre;
}

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */
/* Markdown contents (Blog body) */
.bg-indigo-lightest-to-blue-lightest-to-right {
  background-image: linear-gradient(to right, theme('colors.indigo-lightest'), theme('colors.blue-lightest'));
}

.blog-body {
  @apply leading-loose;
}

.blog-body h1:not(:first-child) {
  @apply mt-20 font-sans text-2xl leading-normal .tracking-tight;
}

.blog-body p {
  @apply mt-8;
}

.blog-body ul {
  @apply mt-8 p-0;
}

/* PrismJS 1.16.0
https://prismjs.com/download.html#themes=prism-funky&languages=markup+css+clike+javascript+markdown+scss */

/* Code blocks
https://andy-bell.design/wrote/creating-a-full-bleed-css-utility/ */
pre[class*="language-"] {
  @apply mt-8 w-screen bg-blue-darkest;

  margin-left: 50%;
  transform: translateX(-50%);
}

code[class*="language-"] {
  @apply p-8 block m-auto max-w-md overflow-auto text-grey text-sm;
}

code:not([class*="language-"]) {
  @apply rounded-sm bg-indigo-lightest-to-blue-lightest-to-right px-2 py-1;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  @apply text-grey-darkest;
}

.token.punctuation {
  @apply text-grey-darker;
}

.token.interpolation-punctuation {
  @apply text-yellow-dark;
}
/* 
.namespace {
  opacity: .7;
} */

.token.entity,
.token.boolean,
.token.number,
.token.constant,
.token.symbol {
  @apply text-pink-dark;
}

.token.selector,
.token.attr-name,
.token.property,
.token.string,
.token.template-string,
.token.char,
.token.builtin {
  @apply text-blue-light;
}

.token.tag,
.token.operator,
.token.url,
.language-css .token.string,
.toke.variable,
.token.inserted {
  @apply text-purple-light;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  @apply text-indigo-light;
}

.token.keyword {
  @apply font-mono-italic text-yellow-dark;
}

.token.regex,
.token.important {
  @apply text-orange-dark;
}

.token.important,
.token.bold {
  @apply font-bold;
}

.token.italic {
  @apply italic;
}
/* 
.token.entity {
  cursor: help;
} */

.token.deleted {
  @apply text-red-dark;
}

.token.function {
  @apply text-blue;
}
